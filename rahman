
# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the Titanic dataset from seaborn
titanic_data = sns.load_dataset('titanic')

# Display the first few rows of the dataset
print("First few rows of the dataset:")
print(titanic_data.head())

# Check for missing values
print("\nMissing values per column:")
print(titanic_data.isnull().sum())

# Drop rows with missing 'embarked' values
titanic_data = titanic_data.dropna(subset=['embarked'])

# Fill missing 'age' values with the median age
titanic_data['age'] = titanic_data['age'].fillna(titanic_data['age'].median())

# Drop the 'deck' column due to many missing values
titanic_data = titanic_data.drop(columns=['deck'])

# Fill missing 'embark_town' values with the mode
titanic_data['embark_town'] = titanic_data['embark_town'].fillna(titanic_data['embark_town'].mode()[0])

# Fill missing 'fare' values with the median fare
titanic_data['fare'] = titanic_data['fare'].fillna(titanic_data['fare'].median())

# Summary statistics
print("\nSummary statistics:")
print(titanic_data.describe())

# Distribution of ages
plt.figure(figsize=(10, 6))
sns.histplot(titanic_data['age'], bins=30, kde=True)
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.title('Distribution of Age')
plt.show()

# Count plot of survivors
plt.figure(figsize=(10, 6))
sns.countplot(x='survived', data=titanic_data)
plt.xlabel('Survived')
plt.ylabel('Count')
plt.title('Survival Count')
plt.show()

# Bar plot of survival rate by class
plt.figure(figsize=(10, 6))
sns.barplot(x='pclass', y='survived', data=titanic_data)
plt.xlabel('Passenger Class')
plt.ylabel('Survival Rate')
plt.title('Survival Rate by Passenger Class')
plt.show()

# Bar plot of survival rate by sex
plt.figure(figsize=(10, 6))
sns.barplot(x='sex', y='survived', data=titanic_data)
plt.xlabel('Sex')
plt.ylabel('Survival Rate')
plt.title('Survival Rate by Sex')
plt.show()

# Pair plot to see pairwise relationships
sns.pairplot(titanic_data, hue='survived', diag_kind='kde')
plt.suptitle('Pairwise Relationships in the Titanic Dataset', y=1.02)
plt.show()

# Heatmap of the correlation matrix
plt.figure(figsize=(12, 8))
# Select only numerical columns for correlation calculation
numerical_data = titanic_data.select_dtypes(include=['number'])
sns.heatmap(numerical_data.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Matrix Heatmap')
plt.show()

